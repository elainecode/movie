// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FilmDetails/> renders the component 1`] = `
<FilmDetails
  anchorEl={<div />}
  film={
    Object {
      "cast": Array [
        "name1",
        "name2",
        "name3",
      ],
      "director": "",
      "genres": Array [
        28,
        87,
        14,
      ],
      "poster_path": "",
      "release_date": "19992345678",
      "runtime": "",
      "title": "",
    }
  }
  genres={
    Object {
      "12": "Adventure",
      "14": "Fantasy",
      "28": "Action",
      "36": "History",
    }
  }
>
  <WithStyles(ForwardRef(Popover))
    anchorEl={<div />}
    anchorOrigin={
      Object {
        "horizontal": "center",
        "vertical": 0,
      }
    }
    id="popover"
    open={true}
    transformOrigin={
      Object {
        "horizontal": "center",
        "vertical": "top",
      }
    }
  >
    <ForwardRef(Popover)
      anchorEl={<div />}
      anchorOrigin={
        Object {
          "horizontal": "center",
          "vertical": 0,
        }
      }
      classes={
        Object {
          "paper": "MuiPopover-paper",
        }
      }
      id="popover"
      open={true}
      transformOrigin={
        Object {
          "horizontal": "center",
          "vertical": "top",
        }
      }
    >
      <ForwardRef(Modal)
        BackdropProps={
          Object {
            "invisible": true,
          }
        }
        container={
          <body
            style="overflow: hidden; padding-right: 0px;"
          >
            <div
              id="popover"
              role="presentation"
              style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
            >
              <div
                aria-hidden="true"
                style="z-index: -1; position: fixed; right: 0px; bottom: 0px; top: 0px; left: 0px; background-color: transparent;"
              />
              <div
                data-test="sentinelStart"
                tabindex="0"
              />
              <div
                class="MuiPaper-root MuiPaper-elevation8 MuiPopover-paper MuiPaper-rounded"
                role="document"
                style="opacity: 1; transform: scale(1, 1); transition: opacity 0ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,transform 0ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; top: 16px; left: 16px; transform-origin: -16px -16px;"
                tabindex="-1"
              >
                <div
                  class="MuiCircularProgress-root MuiCircularProgress-colorPrimary MuiCircularProgress-indeterminate"
                  role="progressbar"
                  style="width: 40px; height: 40px;"
                >
                  <svg
                    class="MuiCircularProgress-svg"
                    viewBox="22 22 44 44"
                  >
                    <circle
                      class="MuiCircularProgress-circle MuiCircularProgress-circleIndeterminate"
                      cx="44"
                      cy="44"
                      fill="none"
                      r="20.2"
                      stroke-width="3.6"
                    />
                  </svg>
                </div>
              </div>
              <div
                data-test="sentinelEnd"
                tabindex="0"
              />
            </div>
          </body>
        }
        id="popover"
        open={true}
      >
        <ForwardRef(Portal)
          container={
            <body
              style="overflow: hidden; padding-right: 0px;"
            >
              <div
                id="popover"
                role="presentation"
                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
              >
                <div
                  aria-hidden="true"
                  style="z-index: -1; position: fixed; right: 0px; bottom: 0px; top: 0px; left: 0px; background-color: transparent;"
                />
                <div
                  data-test="sentinelStart"
                  tabindex="0"
                />
                <div
                  class="MuiPaper-root MuiPaper-elevation8 MuiPopover-paper MuiPaper-rounded"
                  role="document"
                  style="opacity: 1; transform: scale(1, 1); transition: opacity 0ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,transform 0ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; top: 16px; left: 16px; transform-origin: -16px -16px;"
                  tabindex="-1"
                >
                  <div
                    class="MuiCircularProgress-root MuiCircularProgress-colorPrimary MuiCircularProgress-indeterminate"
                    role="progressbar"
                    style="width: 40px; height: 40px;"
                  >
                    <svg
                      class="MuiCircularProgress-svg"
                      viewBox="22 22 44 44"
                    >
                      <circle
                        class="MuiCircularProgress-circle MuiCircularProgress-circleIndeterminate"
                        cx="44"
                        cy="44"
                        fill="none"
                        r="20.2"
                        stroke-width="3.6"
                      />
                    </svg>
                  </div>
                </div>
                <div
                  data-test="sentinelEnd"
                  tabindex="0"
                />
              </div>
            </body>
          }
          disablePortal={false}
        >
          <Portal
            containerInfo={
              <body
                style="overflow: hidden; padding-right: 0px;"
              >
                <div
                  id="popover"
                  role="presentation"
                  style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                >
                  <div
                    aria-hidden="true"
                    style="z-index: -1; position: fixed; right: 0px; bottom: 0px; top: 0px; left: 0px; background-color: transparent;"
                  />
                  <div
                    data-test="sentinelStart"
                    tabindex="0"
                  />
                  <div
                    class="MuiPaper-root MuiPaper-elevation8 MuiPopover-paper MuiPaper-rounded"
                    role="document"
                    style="opacity: 1; transform: scale(1, 1); transition: opacity 0ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,transform 0ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; top: 16px; left: 16px; transform-origin: -16px -16px;"
                    tabindex="-1"
                  >
                    <div
                      class="MuiCircularProgress-root MuiCircularProgress-colorPrimary MuiCircularProgress-indeterminate"
                      role="progressbar"
                      style="width: 40px; height: 40px;"
                    >
                      <svg
                        class="MuiCircularProgress-svg"
                        viewBox="22 22 44 44"
                      >
                        <circle
                          class="MuiCircularProgress-circle MuiCircularProgress-circleIndeterminate"
                          cx="44"
                          cy="44"
                          fill="none"
                          r="20.2"
                          stroke-width="3.6"
                        />
                      </svg>
                    </div>
                  </div>
                  <div
                    data-test="sentinelEnd"
                    tabindex="0"
                  />
                </div>
              </body>
            }
          >
            <div
              id="popover"
              onKeyDown={[Function]}
              role="presentation"
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "fixed",
                  "right": 0,
                  "top": 0,
                  "zIndex": 1300,
                }
              }
            >
              <ForwardRef(SimpleBackdrop)
                invisible={true}
                onClick={[Function]}
                open={true}
              >
                <div
                  aria-hidden={true}
                  onClick={[Function]}
                  style={
                    Object {
                      "WebkitTapHighlightColor": "transparent",
                      "backgroundColor": "transparent",
                      "bottom": 0,
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                      "touchAction": "none",
                      "zIndex": -1,
                    }
                  }
                />
              </ForwardRef(SimpleBackdrop)>
              <TrapFocus
                disableAutoFocus={false}
                disableEnforceFocus={false}
                disableRestoreFocus={false}
                getDoc={[Function]}
                isEnabled={[Function]}
                open={true}
              >
                <div
                  data-test="sentinelStart"
                  tabIndex={0}
                />
                <ForwardRef(Grow)
                  appear={true}
                  in={true}
                  onEnter={[Function]}
                  onEntering={[Function]}
                  onExited={[Function]}
                  role="document"
                  tabIndex="-1"
                  timeout="auto"
                >
                  <Transition
                    addEndListener={[Function]}
                    appear={true}
                    enter={true}
                    exit={true}
                    in={true}
                    mountOnEnter={false}
                    onEnter={[Function]}
                    onEntered={[Function]}
                    onEntering={[Function]}
                    onExit={[Function]}
                    onExited={[Function]}
                    onExiting={[Function]}
                    role="document"
                    tabIndex="-1"
                    timeout={null}
                    unmountOnExit={false}
                  >
                    <WithStyles(ForwardRef(Paper))
                      className="MuiPopover-paper"
                      elevation={8}
                      role="document"
                      style={
                        Object {
                          "opacity": 1,
                          "transform": "scale(1, 1)",
                          "visibility": undefined,
                        }
                      }
                      tabIndex="-1"
                    >
                      <ForwardRef(Paper)
                        className="MuiPopover-paper"
                        classes={
                          Object {
                            "elevation0": "MuiPaper-elevation0",
                            "elevation1": "MuiPaper-elevation1",
                            "elevation10": "MuiPaper-elevation10",
                            "elevation11": "MuiPaper-elevation11",
                            "elevation12": "MuiPaper-elevation12",
                            "elevation13": "MuiPaper-elevation13",
                            "elevation14": "MuiPaper-elevation14",
                            "elevation15": "MuiPaper-elevation15",
                            "elevation16": "MuiPaper-elevation16",
                            "elevation17": "MuiPaper-elevation17",
                            "elevation18": "MuiPaper-elevation18",
                            "elevation19": "MuiPaper-elevation19",
                            "elevation2": "MuiPaper-elevation2",
                            "elevation20": "MuiPaper-elevation20",
                            "elevation21": "MuiPaper-elevation21",
                            "elevation22": "MuiPaper-elevation22",
                            "elevation23": "MuiPaper-elevation23",
                            "elevation24": "MuiPaper-elevation24",
                            "elevation3": "MuiPaper-elevation3",
                            "elevation4": "MuiPaper-elevation4",
                            "elevation5": "MuiPaper-elevation5",
                            "elevation6": "MuiPaper-elevation6",
                            "elevation7": "MuiPaper-elevation7",
                            "elevation8": "MuiPaper-elevation8",
                            "elevation9": "MuiPaper-elevation9",
                            "root": "MuiPaper-root",
                            "rounded": "MuiPaper-rounded",
                          }
                        }
                        elevation={8}
                        role="document"
                        style={
                          Object {
                            "opacity": 1,
                            "transform": "scale(1, 1)",
                            "visibility": undefined,
                          }
                        }
                        tabIndex="-1"
                      >
                        <div
                          className="MuiPaper-root MuiPaper-elevation8 MuiPopover-paper MuiPaper-rounded"
                          role="document"
                          style={
                            Object {
                              "opacity": 1,
                              "transform": "scale(1, 1)",
                              "visibility": undefined,
                            }
                          }
                          tabIndex="-1"
                        >
                          <WithStyles(ForwardRef(CircularProgress))>
                            <ForwardRef(CircularProgress)
                              classes={
                                Object {
                                  "circle": "MuiCircularProgress-circle",
                                  "circleDisableShrink": "MuiCircularProgress-circleDisableShrink",
                                  "circleIndeterminate": "MuiCircularProgress-circleIndeterminate",
                                  "circleStatic": "MuiCircularProgress-circleStatic",
                                  "colorPrimary": "MuiCircularProgress-colorPrimary",
                                  "colorSecondary": "MuiCircularProgress-colorSecondary",
                                  "indeterminate": "MuiCircularProgress-indeterminate",
                                  "root": "MuiCircularProgress-root",
                                  "static": "MuiCircularProgress-static",
                                  "svg": "MuiCircularProgress-svg",
                                }
                              }
                            >
                              <div
                                className="MuiCircularProgress-root MuiCircularProgress-colorPrimary MuiCircularProgress-indeterminate"
                                role="progressbar"
                                style={
                                  Object {
                                    "height": 40,
                                    "width": 40,
                                  }
                                }
                              >
                                <svg
                                  className="MuiCircularProgress-svg"
                                  viewBox="22 22 44 44"
                                >
                                  <circle
                                    className="MuiCircularProgress-circle MuiCircularProgress-circleIndeterminate"
                                    cx={44}
                                    cy={44}
                                    fill="none"
                                    r={20.2}
                                    strokeWidth={3.6}
                                    style={Object {}}
                                  />
                                </svg>
                              </div>
                            </ForwardRef(CircularProgress)>
                          </WithStyles(ForwardRef(CircularProgress))>
                        </div>
                      </ForwardRef(Paper)>
                    </WithStyles(ForwardRef(Paper))>
                  </Transition>
                </ForwardRef(Grow)>
                <div
                  data-test="sentinelEnd"
                  tabIndex={0}
                />
              </TrapFocus>
            </div>
          </Portal>
        </ForwardRef(Portal)>
      </ForwardRef(Modal)>
    </ForwardRef(Popover)>
  </WithStyles(ForwardRef(Popover))>
</FilmDetails>
`;
